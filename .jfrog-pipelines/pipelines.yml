template: true   # required for local templates
valuesFilePath: ./values.yml

resources:
  - name: dbp_repo
    type: GitRepo
    configuration:
      gitProvider: {{ .Values.var.gitProvider }}
      path: {{ .Values.var.path }}
      branches:
        include: {{ .Values.var.branches }} 

  - name: dbp_image
    type: Image
    configuration:
      registry: {{ .Values.var.artifactory }}
      sourceRepository: {{ .Values.var.repo }}               # <-- required if registry is Artifactory
      imageName: {{ .Values.var.imageName }}
      imageTag: latest
      autoPull: true
      
  - name: service_a_build_info
    type: BuildInfo
    configuration:
      sourceArtifactory: {{ .Values.var.artifactory }}
      buildName: {{ .Values.var.pipelineName }}
      buildNumber: ${run_number}  

  #- name: dbp_promoted_build_info
  #  type: BuildInfo
  #  configuration:
  #    sourceArtifactory: {{ .Values.var.artifactory }}
  #    buildName: dbp_build
  #    buildNumber: 1
      

pipelines:
  - name: {{ .Values.var.pipelineName }}
    configuration:
      nodePool: {{ .Values.var.nodePool }}
    steps:
      - name: docker_build
        type: DockerBuild
        configuration:
          affinityGroup: docker_build_push
          dockerFileLocation: .
          dockerFileName: Dockerfile
          dockerImageName: {{ .Values.var.imageName }}   # replace with your image path and name
          dockerImageTag: ${run_number}
          inputResources:
            - name: dbp_repo
          integrations:
            - name: {{ .Values.var.artifactory }}                             # <-- replace with your artifactory integration

      - name: docker_push
        type: DockerPush
        configuration:
          affinityGroup: docker_build_push
          autoPublishBuildInfo: false
          forceXrayScan: false
          targetRepository: {{ .Values.var.repo }}
          integrations:
            - name: {{ .Values.var.artifactory }}                             # <-- replace with your artifactory integration
          inputSteps:
            - name: docker_build
          outputResources:
            - name: dbp_image

      - name: publish_dbp_build
        type: PublishBuildInfo
        configuration:
          requiresApproval: false
          inputSteps:
            - name: docker_push
          outputResources:
            - name: service_a_build_info

      - name: validate_info
        type: Bash
        configuration:
          inputSteps:
          - name: publish_dbp_build
          inputResources:
            - name: service_a_build_info
        execution:
          onExecute:
            - echo ${run_number}
            - echo ${res_service_a_build_info_buildNumber}
            - echo ${res_service_a_build_info_buildName}
            - response=$(validate_artifact buildInfo --build-name SignedPipelinesDocker --build-number ${run_number} --project-key default_source_id)
            - echo $response
            #- response=$(validate_artifact 'buildInfo' ${service_a_build_info} --build-name ${{ .Values.var.pipelineName }} --build-number ${run_number})
            #- validateResult=$(echo "$response" | jq '.result')
            #- if [ "$validateResult" != "true" ]; then echo "failed validation" && exit 1; fi
            #- pipelineName={{ .Values.var.pipelineName }}
            #- echo $pipelineName
            #- uri=https://harsh.jfrogdev.org/pipelines/api/v1/pipeInfo/verify?artifactType=buildInfo&buildName={{ .Values.var.pipelineName }}&buildNumber=${run_number}
            #- echo $uri
            #- response=$(curl -H "Authorization:Bearer ${int_generic_pipe_token}" $uri)
            #- echo "$response"
            #- validateResult=$(echo "$response" | jq '.result')
            #- if [ "$validateResult" != "true" ]; then echo "failed validation" && exit 1; fi

      #- name: promote_dbp_build
      #  type: PromoteBuild
      #  configuration:
      #    targetRepository: demo-pipelines
      #    integrations:
      #      - name: {{ .Values.var.artifactory }}
      #    inputResources:
      #      - name: dbp_build_info
      #    outputResources:
      #      - name: dbp_promoted_build_info
